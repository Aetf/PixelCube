活动定义
1	3D
	1.1	小方块		(王坤)
		1.1.1	Init
			初始化小方块的数据
		1.1.2	Color
			获取和设置小方块的颜色，纯色
		1.1.3	Position
			获取和设置小方块的位置，相对于画布
		1.1.4	Visible
			获取和设置小方块是否可见，不可见时仅显示边框
		1.1.5	Hasfocus
			获取和设置小方块是否拥有焦点，显示容器据此绘制不同的样式
		1.1.6	Serialization
			小方块数据要实现序列化的相关接口
	1.2	背景		(余佩峰)
		1.2.1	Init
			初始化背景数据
		1.2.2	Fill
			获取和设置背景填充模式（仅实现纯色，保存颜色即可）
	1.3	显示容器	(沈思杰)
		1.3.1	Init
			一切显示工作的初始化
		1.3.2	Draw
			绘制的具体过程，根据世界变换矩阵对世界进行变换后绘制到显示表面上
		1.3.3	Matrix (Zoom, pan/rotate)
			获取和设置世界变换矩阵
2	音效			(张祎琼)
	2.1	效果音
		2.1.1	Handle event from 3.2
			监听 操作实现 发出的多种PreXXXOperationEvent，并进行效果音的播放
		2.1.2	Enable
			获取和设置是否启用效果音
		2.1.3	独立thread
			效果音的播放应使用独立线程
	2.2	背景音
		2.2.1	Enable
			获取和设置是否启用背景音
		2.2.2	独立播放
			整个应用程序周期中独立播放
3	UI
	3.1	Leapmotion封装
		3.1.1	定义手势	（吴宇明，赵嘉鹏)
			定义应用中需要用到的所有操作手势。这不是一个编码任务，但是良好的手势设计对我们项目的成功非常关键，设计完成
后应产生一份手势定义文档。
			必要时可以全体开会讨论手势设计问题
		3.1.2	手势检测 (Event source)	(吴宇明)
			具体实现3.1.1 中定义的手势的检测，当相应手势产生时，raise相应事件
			建议至少分为底层事件和高级手势事件两部分，可能可以参考Leapmotion的内置手势事件的设计思路
			手势事件的基类GestureEvent，参数基类GestureEventArgument
		3.1.3	设备init	（吴宇明)
			Leapmotion的初始化工作，应当在初始化失败时通知5.1 UI框架，提醒用户进行处理
		3.1.4	坐标转换	(赵嘉鹏)
			Leap坐标系和现实坐标系的映射管理
	3.2	操作实现	（罗东阳，邹帅)
		3.2.1	Handle event from 3.1.2
			监听Leapmotion封装中产生的多种GestureEvent，根据3.1.1中定义的不同手势的语义进行不同的数据操作
		3.2.2	实际数据操作
			改变指定位置小方块颜色
			改变当前焦点小方块
			改变世界旋转角度
			改变世界缩放程度
		3.2.3	操作通知 (Event source)
			3.2.2中提到的所有操作在进行前应产生PreXXXOperationEvent，操作进行后产生PostXXXOperationEvent，其中XXX为具体操作。如此处理方便其他模块对操作进行相应
4	序列化		(王坤)
	4.1	自动保存
		通过监听5.2的AppEvent，在程序退出时自动保存整个程序的当前状态到临时文件中，并在下次打开时自动恢复，实际实现类似4.2与4.3的组合
	4.2	导入
		导入事先保存的作品，暂定仅提供3个slot供用户使用
	4.3	导出
		导出作品到文件，暂定仅提供3个slot供用户使用
	4.4	新建
		新建时初始化ArtWork，初始化小方块的所有数据
5	总体框架	（余佩峰)
	5.1	UI框架
		除了显示容器负责绘制的显示表面之外的部分由UI框架进行管理，包括菜单等
	5.2	生命周期管理 (Event source)
		提供整个应用程序级别的初始化、结束事件，基类为AppEvent。如配置载入，自动保存等均需要这个模块。

6	变更记录
	6.1	2013-12-08	吴宇明
	LeapMotion模块添加坐标转换模块，并由赵嘉鹏负责
	导入导出模块 添加 新建模块，并由王坤负责
